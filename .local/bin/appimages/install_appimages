#!/bin/bash
# shellcheck source=/dev/null
. ~/.local/lib/lib_bash_utils.sh
SCRIPT=$(realpath "$0")
SCRIPT_PATH=$(dirname "$SCRIPT")
log "installing/upgrading appimages"

# DOWNLOAD APPIMAGES
ARDUINO_OUTPUT_FILE="$SCRIPT_PATH/arduino-ide"
ARDUINO_VERSION=$(get_github_latest_release_version arduino arduino-ide)
ARDUINO_LINK="https://github.com/arduino/arduino-ide/releases/download/${ARDUINO_VERSION}/arduino-ide_${ARDUINO_VERSION}_Linux_64bit.AppImage"
if [[ -z $ARDUINO_VERSION ]]; then
    error_log "getting latest release version for ${ARDUINO_OUTPUT_FILE} failed"
else
    log "downloading $ARDUINO_OUTPUT_FILE v$ARDUINO_VERSION"
    if ! curl -s -L -o "$ARDUINO_OUTPUT_FILE" "$ARDUINO_LINK"; then
        error_log "downloading appimage $ARDUINO_OUTPUT_FILE failed"
    else
        log "$ARDUINO_OUTPUT_FILE v$ARDUINO_VERSION successfully downloaded"
    fi
fi

MQTT_EXPLORER_OUTPUT_FILE="$SCRIPT_PATH/mqtt-explorer"
# MQTT_EXPLORER_VERSION=$(get_github_latest_release_version thomasnordquist MQTT-Explorer)
# Use fix version due to latest release version being an outdated version and we want the beta
MQTT_EXPLORER_VERSION="0.4.0-beta1"
MQTT_EXPLORER_LINK="https://github.com/thomasnordquist/MQTT-Explorer/releases/download/0.0.0-${MQTT_EXPLORER_VERSION}/MQTT-Explorer-${MQTT_EXPLORER_VERSION}.AppImage"
if [[ -z $MQTT_EXPLORER_VERSION ]]; then
    error_log "getting latest release version for ${MQTT_EXPLORER_VERSION} failed"
else
    log "downloading $MQTT_EXPLORER_OUTPUT_FILE v$MQTT_EXPLORER_VERSION"
    if ! curl -s -L -o "$MQTT_EXPLORER_OUTPUT_FILE" "$MQTT_EXPLORER_LINK"; then
        error_log "downloading appimage $MQTT_EXPLORER_OUTPUT_FILE failed"
    else
        log "$MQTT_EXPLORER_OUTPUT_FILE v$MQTT_EXPLORER_VERSION successfully downloaded"
    fi
fi

PRUSA_SLICER_OUTPUT_FILE="$SCRIPT_PATH/prusaslicer"
PRUSA_SLICER_VERSION="2.5.0"
PRUSA_SLICER_LINK=https://github.com/prusa3d/PrusaSlicer/releases/download/version_${PRUSA_SLICER_VERSION}/PrusaSlicer-${PRUSA_SLICER_VERSION}+linux-x64-GTK3-202209060725.AppImage
if [[ -z $PRUSA_SLICER_VERSION ]]; then
    error_log "getting latest release version for ${PRUSA_SLICER_OUTPUT_FILE} failed"
else
    log "downloading $PRUSA_SLICER_OUTPUT_FILE $PRUSA_SLICER_VERSION"
    if ! curl -s -L -o "$PRUSA_SLICER_OUTPUT_FILE" "$PRUSA_SLICER_LINK"; then
        error_log "downloading appimage $PRUSA_SLICER_OUTPUT_FILE failed"
    else
        log "$PRUSA_SLICER_OUTPUT_FILE v$PRUSA_SLICER_VERSION successfully downloaded"
    fi
fi

FREECAD_OUTPUT_FILE="$SCRIPT_PATH/freecad"
FREECAD_VERSION=$(get_github_latest_release_version FreeCAD FreeCAD)
FREECAD_LINK=https://github.com/FreeCAD/FreeCAD/releases/download/0.20.2/FreeCAD_0.20.2-2022-12-27-conda-Linux-x86_64-py310.AppImage
if [[ -z $FREECAD_VERSION ]]; then
    error_log "getting latest release version for ${FREECAD_OUTPUT_FILE} failed"
else
    log "downloading $FREECAD_OUTPUT_FILE v$FREECAD_VERSION"
    if ! curl -s -L -o "$FREECAD_OUTPUT_FILE" "$FREECAD_LINK"; then
        error_log "downloading appimage $FREECAD_OUTPUT_FILE failed"
    else
        log "$FREECAD_OUTPUT_FILE v$FREECAD_VERSION successfully downloaded"
    fi
fi

# MAKE APP IMAGES EXECUTABLE
log "making appimages executable"
chmod +x "$SCRIPT_PATH"/*

log "installing/upgrading appimages finished"
