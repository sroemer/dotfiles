#!/bin/bash
# shellcheck source=/dev/null
. ~/.local/lib/lib_bash_utils.sh
SCRIPT=$(realpath "$0")
SCRIPT_PATH=$(dirname "$SCRIPT")
log "detected script path is ${SCRIPT_PATH}"

# Parse script parameters
while getopts ab opts; do
    case ${opts} in
        a) OPT_UPDATE_APPIMAGES=1 ;;
        b) OPT_UPDATE_BINARIES=1 ;;
        *) ;;
    esac
done

# CHECK FOR DOWNLOAD TOOL
if ! [[ -x $(command -v curl) ]]; then
    error_log "curl required but not available"
    exit 1
fi

# Install/Download AppImages
if [[ -z $OPT_UPDATE_APPIMAGES ]]; then
    log "not updating appimages (use -a if intended)"
else
    APPIMG_INSTALL_SCRIPT=$HOME/.local/bin/appimages/install_appimages
    if [[ -x "$APPIMG_INSTALL_SCRIPT" ]]; then
        $APPIMG_INSTALL_SCRIPT
    fi
fi

if [[ -z $OPT_UPDATE_BINARIES ]]; then
    log "not updating binaries (use -b if intended)"
else
    # Update Marksman (markdown language server)
    MARKSMAN_OUTPUT_FILE="$SCRIPT_PATH/marksman"
    MARKSMAN_OWNER="artempyanykh"
    MARKSMAN_REPOSITORY="marksman"
    MARKSMAN_VERSION=$(get_github_latest_release_version $MARKSMAN_OWNER $MARKSMAN_REPOSITORY)
    MARKSMAN_LINK=""https://github.com/${MARKSMAN_OWNER}/${MARKSMAN_REPOSITORY}/releases/download/${MARKSMAN_VERSION}/marksman-linux-x64
    if [[ -z $MARKSMAN_VERSION ]]; then
        error_log "getting latest release version for ${MARKSMAN_OUTPUT_FILE} failed"
    else
        log "downloading $MARKSMAN_OUTPUT_FILE $MARKSMAN_VERSION"
        if ! curl -s -L -o "$MARKSMAN_OUTPUT_FILE" "$MARKSMAN_LINK"; then
            error_log "downloading binary $MARKSMAN_OUTPUT_FILE failed"
        else
            log "$MARKSMAN_OUTPUT_FILE v$MARKSMAN_VERSION successfully downloaded"
            chmod +x "$MARKSMAN_OUTPUT_FILE"
        fi
    fi
    
    # Update Rust via rustup
    if ! which rustup; then
        error_log "Cannot update Rust due to rustup not being available"
    else
        log "Starting Rust update with rustup"
        if ! rustup update; then
            error_log "Updating Rust with rustup failed"
        else
            log "Successfully updated Rust with rustup"

            if ! rustup component add rust-analyzer; then
                error_log "Adding component 'rust-analyzer' with rustup failed"
            else
                log "Successfully added component 'rust-analyzer' with rustup"
            fi
        fi
    fi

    # Install td-watson and nodejs via python pip
    if ! [[ -x $(command -v pip) ]]; then
        error_log "pip required but not available"
        exit 1
    fi
    log "installing/upgrading python tools"
    if ! pip install --quiet --upgrade --break-system-packages --user pyright python-lsp-server nodeenv td-watson pyserial yq khal khard vdirsyncer platformio youtube-dl yt-dlp; then
        error_log "installing/upgrading python tools failed (pip returned $?)"
    else
        log "installing/upgrading python tools finished"

        # Install nodejs runtime environment and bash-/diagnostic-language-servers
        NODE_DIR="$HOME/.local/nodejs/"
        if [[ -d "$NODE_DIR" ]]; then
            log "removing existing nodejs directory"
            rm -rf "$NODE_DIR"
        fi

        if [[ -d "$NODE_DIR" ]]; then
            error_log "nodejs installation directory still exists."
            exit 1
        else
            log "installing latest nodejs to $NODE_DIR"
            nodeenv "$NODE_DIR"

            log "activating nodejs environment"
            # shellcheck source=/dev/null
            . "$NODE_DIR/bin/activate"

            log "installing awk-language-server"
            npm i -g awk-language-server

            log "installing bash-language-server"
            npm i -g bash-language-server

            log "installing diagnostic-languageserver"
            npm i -g diagnostic-languageserver

            log "installing vscode-langservers-extracted"
            npm i -g vscode-langservers-extracted

            log "installing yaml-language-server"
            npm i -g yaml-language-server

            log "installing tree-sitter-cli"
            npm i -g tree-sitter-cli

            log "deactivating nodejs environment"
            deactivate_node
        fi
    fi
fi
